:root {
  --clr-primary-400: hsl(228, 39%, 23%);
  --clr-accent-500: hsl(10, 82%, 48%);
  --clr-accent-400: hsl(12, 88%, 59%);
  --clr-accent-300: hsl(12, 88%, 75%);
  --clr-accent-100: hsl(13, 100%, 96%);
  --clr-neutral-900: hsl(232, 12%, 13%);
  --clr-neutral-300: hsl(0, 0%, 70%);
  --clr-neutral-100: hsl(0, 0%, 98%);

  --ff-primary: 'Be Vietnam Pro', sans-serif;
  --ff-body: var(--ff-primary);
  --ff-heading: var(--ff-primary);

  /* Using font weights from open props */
  --fw-regular: var(--font-weight-4);
  --fw-semi-bold: var(--font-weight-5);
  --fw-bold: var(--font-weight-7);

  /* Using font sizes from open props */
  --fs-300: 0.8125rem;
  --fs-400: 0.875rem;
  --fs-500: 0.9375rem;
  --fs-600: var(--font-size-1);
  --fs-700: var(--font-size-4);
  --fs-800: var(--font-size-6);
  --fs-900: var(--font-size-8);

  --fs-body: var(--fs-400);
  --fs-primary-heading: var(--fs-800);
  --fs-secondary-heading: var(--fs-700);
  --fs-nav: var(--fs-600);
  --fs-button: var(--fs-300);

  --size-2-5: 0.75rem;
  --size-7-5: 2.5rem;
}

/* Desktop screen font sizes */
@media (min-width: 50em) {
  :root {
    --fs-body: var(--fs-600);
    --fs-primary-heading: var(--fs-900);
    --fs-secondary-heading: var(--fs-800);
    --fs-nav: var(--fs-300);
  }
}

/* https://piccalil.li/blog/a-modern-css-reset */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

html,
body {
  height: 100%;
}

/* Set core body defaults */
body {
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
svg {
  max-width: 100%;
  display: block;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* General Styling */
body {
  font-size: var(--fs-body);
  font-family: var(--ff-body);
  color: var(--clr-primary-400);
}

/* :not([class]) means apply this style to just the plain <p></p> blocks */
p:not([class]) {
  opacity: 0.68;
  max-width: 32ch;
}

p[data-width='wide'] {
  max-width: 42ch;
}

/* Button */
.button {
  /* inline-flex is useful when there is an icon along with text inside the button */
  display: inline-flex;
  cursor: pointer;
  text-decoration: none;
  border: 0;
  /* vmax is viewport maximum */
  border-radius: 100vmax;
  padding: 1.25em 2.5em;
  font-weight: var(--fw-bold);
  font-size: var(--fs-button);
  line-height: 1;
  color: var(--clr-neutral-100);
  background-color: var(--clr-accent-400);
  box-shadow: 0 1.22em 1em -1em var(--clr-accent-500);
}

.button[data-type='inverted'] {
  background-color: var(--clr-neutral-100);
  color: var(--clr-accent-400);
}

.button[data-glow='none'] {
  box-shadow: none;
}

.button:hover,
.button:focus-visible {
  background-color: var(--clr-accent-300);
}

.button[data-type='inverted']:hover,
.button[data-type='inverted']:focus-visible {
  background-color: var(--clr-neutral-100);
  color: var(--clr-accent-300);
}

/* navigation */

.primary-header {
  padding-top: var(--size-8);
}

.nav-wrapper {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.mobile-nav-toggle {
  display: none;
}

.nav-list {
  font-size: var(--fs-nav);
  font-weight: var(--fw-semi-bold);
  display: flex;
  gap: clamp(var(--size-1), 3vw, var(--size-9));
}

.nav-list a {
  text-decoration: none;
  color: var(--clr-primary-400);
}

.nav-list a:hover,
.nav-list a:focus {
  color: var(--clr-accent-400);
}

/* dropdown menu */
.dropdown {
  position: relative;
}

.dropdown-menu {
  position: absolute;
  left: 0;
  top: calc(100% + var(--size-2));
  width: max-content;
  padding: var(--size-3);
  background-color: var(--clr-neutral-100);
  border-radius: var(--size-1);
  box-shadow: 0 0 0.75em rgb(0, 0, 0, 0.12);

  opacity: 0;
  transform: translateY(-10px);
  transition: opacity 150ms ease-in-out, transform 150ms ease-in-out;
  pointer-events: none;
}

.dropdown[data-link-active] .link {
  color: var(--clr-accent-400);
}

.dropdown[data-link-active] .dropdown-menu {
  opacity: 1;
  transform: translateY(0);
  pointer-events: auto;
}

.dropdown>.link:is(:hover, :focus) {
  cursor: pointer;
  color: var(--clr-accent-400);
}

/* not using mobile-first approach here
  because this method is the path of least resistance.
  No need to blindly follow mobile-first. */
@media (max-width: 50em) {
  .primary-header[data-overlay] {
    position: relative;
    isolation: isolate;
    z-index: 999;
  }

  .primary-navigation {
    display: none;
    /* Style the primary nav */
    position: fixed;
    padding-block: var(--size-6);
    /* inset: top&bottom left&right (ht matches ht of element); */
    inset: var(--size-11) var(--size-3) auto;
    max-width: 30rem;
    margin-inline: auto;
    background-color: var(--clr-neutral-100);
    border-radius: var(--size-1);
    box-shadow: 0 0 0.75em rgb(0, 0, 0, 0.12);
  }

  .primary-header[data-overlay]::before {
    content: '';
    position: fixed;
    /* inset zero makes it full screen */
    inset: 0;
    background-image: linear-gradient(rgb(0 0 0 / 0), rgb(0 0 0 /0.75));
  }

  .nav-list {
    display: grid;
    gap: var(--size-4);
    text-align: center;
  }

  .primary-navigation[data-visible] {
    display: block;
  }

  .mobile-nav-toggle {
    display: block;
    position: fixed;
    top: var(--size-7-5);
    right: var(--size-7);
    cursor: pointer;
    background: transparent;
    border: 0;
    padding: 0.5em;
    background-color: rgb(255 255 255);
    width: var(--size-6);
    aspect-ratio: 1;
    background-image: url('/img/icon-hamburger.svg');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
  }

  .mobile-nav-toggle[data-visible] {
    background-color: transparent;
  }

  .mobile-nav-toggle[aria-expanded='true'] {
    background-image: url('/img/icon-close.svg');
  }

  .dropdown-menu {
    position: inherit;
    left: 0;
    top: 0;
    width: 100%;
    display: none;
    transform: none;
    opacity: 1;
    pointer-events: auto;
  }

  .dropdown[data-link-active] .dropdown-menu {
    display: block;
  }
}

/* footer */
.primary-footer {
  --logo-color: var(--clr-neutral-100);
}

.primary-footer-wrapper {
  display: grid;
  gap: var(--size-8);
  grid-template-areas:
    'form'
    'nav'
    'logo-social';
}

.primary-footer-logo-social {
  grid-area: logo-social;

  display: flex;
  flex-direction: column-reverse;
  align-items: center;
  gap: var(--size-8);
}

.primary-footer-nav {
  grid-area: nav;
}

.primary-footer-form {
  grid-area: form;

  display: flex;
  align-items: center;
  flex-direction: column;
  gap: var(--size-2);
}

.primary-footer-form form {
  display: flex;
  gap: var(--size-2);
}

.primary-footer-form input {
  border-radius: 100vw;
  border: 0;
  padding: var(--size-2) var(--size-1);
}

@media (min-width: 50em) {
  .primary-footer-wrapper {
    grid-template-areas: 'logo-social nav form';
  }

  .primary-footer-logo-social {
    flex-direction: column;
    align-items: flex-start;
    justify-content: space-between;
    gap: var(--size-10);
  }

  .primary-footer-form {
    gap: var(--size-10);
    align-items: flex-end;
  }
}

/* only for mobile, center all grid areas */
@media (max-width: 50em) {
  .primary-footer-wrapper>* {
    margin-inline: auto;
  }
}

/* footer navigation */
.footer-nav {
  columns: 2;
  gap: max(8vw, 2rem);
}

.footer-nav a {
  text-decoration: none;
  color: var(--clr-neutral-300);
}

.footer-nav a:is(:hover, :focus) {
  color: var(--clr-accent-400);
}

.footer-nav ul {
  line-height: var(--size-7);
}

/* social list */
.social-list {
  display: flex;
  gap: var(--size-4);
}

.social-icon {
  width: var(--size-6);
  aspect-ratio: 1;
  fill: var(--clr-neutral-100);
}

.social-list a:is(:hover, :focus) .social-icon {
  fill: var(--clr-accent-400);
}

@media (min-width: 50em) {
  .social-list {
    gap: var(--size-2-5);
  }

  .social-icon {
    width: var(--size-5);
  }
}

/* cta */
.cta {
  position: relative;
  /* creates a separate stacking context.
	Refer to KP's tutorial https: //www.youtube.com/watch?v=sNYVqfRwX1A&t=84s */
  isolation: isolate;
  text-align: center;
}

@media (min-width: 50em) {
  .cta {
    text-align: left;
  }
}

.cta::before {
  content: '';
  position: absolute;
  z-index: -1;
  inset: 0;
  background-image: url('/img/bg-tablet-pattern.svg'), url('/img/bg-tablet-pattern.svg');
  background-position: -15rem 1rem, 70rem -40rem;
  background-repeat: no-repeat;
  opacity: 0.1;
}

/* Utility classes */

/* NOTE: visually-hidden class was copied from 
  https: //a11y-guidelines.orange.com/en/web/components-examples/accessible-hiding/ */
.visually-hidden {
  position: absolute;
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

.container {
  /* widest width according to design specs */
  --max-width: 1110px;
  --padding: var(--size-9);

  max-width: min(var(--max-width), 100% - var(--padding));
  margin-inline: auto;
}

.even-columns {
  display: grid;
  gap: var(--size-3);
}

/* NOTE: em is the only unit that is consistent across
  all browsers and OS-es when you are zooming in and out.
  In a media query em or rem does not look at root font size,
  this looks at the default browser setting. (Kevin Powell) */
@media (min-width: 50em) {
  .even-columns {
    /* The auto placement algorithm places items by
      filling each column in turn, adding new columns
      as necessary */
    grid-auto-flow: column;
    /* 1fr makes all columns equal width */
    grid-auto-columns: 1fr;
  }
}

.vertical-align-center {
  align-items: center;
}

@media (min-width: 50em) {
  .justify-self-end-md {
    justify-self: end;
  }
}

/* :where reduces the specificity. 
	For example: the button below can have its own styling 
	even when it is a sibling inside .block-flow*/
/* .button {
	outline: 3px solid yellow;
} */
:where(.block-flow > :not(:first-child)) {
  /* outline: 4px solid purple; */
  margin-top: var(--block-flow-spacer, 3em);
}

.text-primary-400 {
  color: var(--clr-primary-400);
}

.text-accent-400 {
  color: var(--clr-accent-400);
}

.text-accent-100 {
  color: var(--clr-accent-100);
}

.text-neutral-300 {
  color: var(--clr-neutral-300);
}

.text-neutral-100 {
  color: var(--clr-neutral-100);
}

.text-neutral-900 {
  color: var(--clr-neutral-900);
}

.bg-primary-400 {
  background-color: var(--clr-primary-400);
}

.bg-accent-400 {
  background-color: var(--clr-accent-400);
}

.bg-accent-100 {
  background-color: var(--clr-accent-100);
}

.bg-neutral-100 {
  background-color: var(--clr-neutral-100);
}

.bg-neutral-900 {
  background-color: var(--clr-neutral-900);
}

.fw-bold {
  font-weight: var(--fw-bold);
}

.fw-semi-bold {
  font-weight: var(--fw-semi-bold);
}

.fw-regular {
  font-weight: var(--fw-regular);
}

.fs-primary-heading {
  font-size: var(--fs-primary-heading);
  line-height: 1.1;
}

.fs-secondary-heading {
  font-size: var(--fs-secondary-heading);
  line-height: 1.1;
}

/* NOTE: the font size classes which are numbered do not
  change with screen size */
.fs-300 {
  font-size: var(--fs-300);
}

.fs-400 {
  font-size: var(--fs-400);
}

.fs-500 {
  font-size: var(--fs-500);
}

.fs-600 {
  font-size: var(--fs-600);
}

/* Top and bottom padding */
.padding-block-8 {
  /* 3 rem */
  padding-block: var(--size-8);
}

.padding-block-9 {
  /* 4 rem */
  padding-block: var(--size-9);
}

.padding-block-10 {
  /* 5 rem */
  padding-block: var(--size-10);
}

.display-sm-none {
  display: none;
}

@media (min-width: 50.01em) {
  .display-md-inline-flex {
    display: inline-flex;
  }
}